/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ICO, ICOInterface } from "../ICO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenPrecio",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_beneficiario",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "comprador",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cantidad",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "monto",
        type: "uint256",
      },
    ],
    name: "TokensComprados",
    type: "event",
  },
  {
    inputs: [],
    name: "beneficiario",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comprarTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "montoRecaudado",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "retirarFondos",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPrecio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161068c38038061068c83398101604081905261002f91610066565b600080546001600160a01b039485166001600160a01b031991821617909155600192909255600280549190931691161790556100c0565b60008060006060848603121561007a578283fd5b8351610085816100a8565b60208501516040860151919450925061009d816100a8565b809150509250925092565b6001600160a01b03811681146100bd57600080fd5b50565b6105bd806100cf6000396000f3fe6080604052600436106100555760003560e01c80631538cdc61461005a57806343fd703f146100645780638af018801461008f578063915903ef146100a45780639d76ea58146100c6578063ea23a6c9146100db575b600080fd5b6100626100f0565b005b34801561007057600080fd5b506100796102b1565b60405161008691906103c4565b60405180910390f35b34801561009b57600080fd5b506100626102c0565b3480156100b057600080fd5b506100b9610346565b6040516100869190610511565b3480156100d257600080fd5b5061007961034c565b3480156100e757600080fd5b506100b961035b565b600034116101195760405162461bcd60e51b81526004016101109061045f565b60405180910390fd5b60015460009061013b9061013534670de0b6b3a7640000610361565b90610374565b6000546040516370a0823160e01b815291925082916001600160a01b03909116906370a08231906101709030906004016103c4565b60206040518083038186803b15801561018857600080fd5b505afa15801561019c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c091906103ac565b10156101de5760405162461bcd60e51b8152600401610110906104a3565b6003546101eb9034610380565b60035560005460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061022090339085906004016103d8565b602060405180830381600087803b15801561023a57600080fd5b505af115801561024e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610272919061038c565b507f8704ac79e74bdb024149c028e4b314383a8fe0ff6fd31f4987435469a57402d03382346040516102a6939291906103f1565b60405180910390a150565b6002546001600160a01b031681565b6002546001600160a01b031633146102ea5760405162461bcd60e51b815260040161011090610412565b6000471161030a5760405162461bcd60e51b8152600401610110906104da565b6002546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610343573d6000803e3d6000fd5b50565b60015481565b6000546001600160a01b031681565b60035481565b600061036d8284610552565b9392505050565b600061036d8284610532565b600061036d828461051a565b60006020828403121561039d578081fd5b8151801515811461036d578182fd5b6000602082840312156103bd578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b6020808252602d908201527f536f6c6f20656c2062656e65666963696172696f20707565646520726574697260408201526c6172206c6f7320666f6e646f7360981b606082015260800190565b60208082526024908201527f446562657320656e7669617220455448207061726120636f6d7072617220746f6040820152636b656e7360e01b606082015260800190565b6020808252601e908201527f466f6e646f7320696e737566696369656e74657320656e206c612049434f0000604082015260600190565b6020808252601a908201527f4e6f2068617920666f6e646f7320706172612072657469726172000000000000604082015260600190565b90815260200190565b6000821982111561052d5761052d610571565b500190565b60008261054d57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561056c5761056c610571565b500290565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220f58ed23a924b054522958a09020d3e5f31a8e4cc3c1aebae0f3b4b91c6706a1064736f6c63430008010033";

export class ICO__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _tokenAddress: string,
    _tokenPrecio: BigNumberish,
    _beneficiario: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ICO> {
    return super.deploy(
      _tokenAddress,
      _tokenPrecio,
      _beneficiario,
      overrides || {}
    ) as Promise<ICO>;
  }
  getDeployTransaction(
    _tokenAddress: string,
    _tokenPrecio: BigNumberish,
    _beneficiario: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenAddress,
      _tokenPrecio,
      _beneficiario,
      overrides || {}
    );
  }
  attach(address: string): ICO {
    return super.attach(address) as ICO;
  }
  connect(signer: Signer): ICO__factory {
    return super.connect(signer) as ICO__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ICOInterface {
    return new utils.Interface(_abi) as ICOInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ICO {
    return new Contract(address, _abi, signerOrProvider) as ICO;
  }
}

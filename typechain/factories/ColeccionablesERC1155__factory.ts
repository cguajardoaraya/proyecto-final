/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ColeccionablesERC1155,
  ColeccionablesERC1155Interface,
} from "../ColeccionablesERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e0338038062001e03833981016040819052620000349162000171565b8062000040816200005c565b50620000556200004f62000075565b62000079565b506200029a565b805162000071906002906020840190620000cb565b5050565b3390565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000d99062000247565b90600052602060002090601f016020900481019282620000fd576000855562000148565b82601f106200011857805160ff191683800117855562000148565b8280016001018555821562000148579182015b82811115620001485782518255916020019190600101906200012b565b50620001569291506200015a565b5090565b5b808211156200015657600081556001016200015b565b6000602080838503121562000184578182fd5b82516001600160401b03808211156200019b578384fd5b818501915085601f830112620001af578384fd5b815181811115620001c457620001c462000284565b604051601f8201601f19908116603f01168101908382118183101715620001ef57620001ef62000284565b81604052828152888684870101111562000207578687fd5b8693505b828410156200022a57848401860151818501870152928501926200020b565b828411156200023b57868684830101525b98975050505050505050565b6002810460018216806200025c57607f821691505b602082108114156200027e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611b5980620002aa6000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c8063715018a61161008c578063d81d0a1511610066578063d81d0a15146101b4578063e985e9c5146101c7578063f242432a146101da578063f2fde38b146101ed576100ce565b8063715018a6146101845780638da5cb5b1461018c578063a22cb465146101a1576100ce565b8062fdd58e146100d357806301ffc9a7146100fc5780630e89341c1461011c578063156e29f61461013c5780632eb2c2d6146101515780634e1273f414610164575b600080fd5b6100e66100e13660046112ac565b610200565b6040516100f39190611962565b60405180910390f35b61010f61010a3660046113d0565b610257565b6040516100f3919061159d565b61012f61012a366004611408565b61029f565b6040516100f391906115a8565b61014f61014a3660046112d5565b610333565b005b61014f61015f3660046110f8565b610392565b610177610172366004611307565b6103f0565b6040516100f3919061155c565b61014f610510565b61019461055b565b6040516100f391906114a5565b61014f6101af366004611272565b61056b565b61014f6101c2366004611201565b610581565b61010f6101d53660046110c6565b6105db565b61014f6101e836600461119e565b610609565b61014f6101fb3660046110a5565b610660565b60006001600160a01b0383166102315760405162461bcd60e51b815260040161022890611657565b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061028857506001600160e01b031982166303a24d0760e21b145b806102975750610297826106d1565b90505b919050565b6060600280546102ae906119b5565b80601f01602080910402602001604051908101604052809291908181526020018280546102da906119b5565b80156103275780601f106102fc57610100808354040283529160200191610327565b820191906000526020600020905b81548152906001019060200180831161030a57829003601f168201915b50505050509050919050565b61033b6106ea565b6001600160a01b031661034c61055b565b6001600160a01b0316146103725760405162461bcd60e51b815260040161022890611812565b61038d838383604051806020016040528060008152506106ee565b505050565b61039a6106ea565b6001600160a01b0316856001600160a01b031614806103c057506103c0856101d56106ea565b6103dc5760405162461bcd60e51b815260040161022890611776565b6103e985858585856107dd565b5050505050565b606081518351146104135760405162461bcd60e51b815260040161022890611890565b6000835167ffffffffffffffff81111561043d57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610466578160200160208202803683370190505b50905060005b8451811015610508576104cd85828151811061049857634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106104c057634e487b7160e01b600052603260045260246000fd5b6020026020010151610200565b8282815181106104ed57634e487b7160e01b600052603260045260246000fd5b602090810291909101015261050181611a1d565b905061046c565b509392505050565b6105186106ea565b6001600160a01b031661052961055b565b6001600160a01b03161461054f5760405162461bcd60e51b815260040161022890611812565b61055960006109ae565b565b6003546001600160a01b03165b90565b61057d6105766106ea565b8383610a00565b5050565b6105896106ea565b6001600160a01b031661059a61055b565b6001600160a01b0316146105c05760405162461bcd60e51b815260040161022890611812565b61038d83838360405180602001604052806000815250610aa3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6106116106ea565b6001600160a01b0316856001600160a01b031614806106375750610637856101d56106ea565b6106535760405162461bcd60e51b8152600401610228906116e8565b6103e98585858585610c24565b6106686106ea565b6001600160a01b031661067961055b565b6001600160a01b03161461069f5760405162461bcd60e51b815260040161022890611812565b6001600160a01b0381166106c55760405162461bcd60e51b8152600401610228906116a2565b6106ce816109ae565b50565b6001600160e01b031981166301ffc9a760e01b14919050565b3390565b6001600160a01b0384166107145760405162461bcd60e51b815260040161022890611921565b600061071e6106ea565b905061073f8160008761073088610d58565b61073988610d58565b876109a6565b6000848152602081815260408083206001600160a01b03891684529091528120805485929061076f90849061199d565b92505081905550846001600160a01b031660006001600160a01b0316826001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6287876040516107c692919061196b565b60405180910390a46103e981600087878787610db1565b81518351146107fe5760405162461bcd60e51b8152600401610228906118d9565b6001600160a01b0384166108245760405162461bcd60e51b815260040161022890611731565b600061082e6106ea565b905061083e8187878787876109a6565b60005b845181101561094057600085828151811061086c57634e487b7160e01b600052603260045260246000fd5b60200260200101519050600085838151811061089857634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156108e85760405162461bcd60e51b8152600401610228906117c8565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061092590849061199d565b925050819055505050508061093990611a1d565b9050610841565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161099092919061156f565b60405180910390a46109a6818787878787610ed6565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610a325760405162461bcd60e51b815260040161022890611847565b6001600160a01b0383811660008181526001602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610a9690859061159d565b60405180910390a3505050565b6001600160a01b038416610ac95760405162461bcd60e51b815260040161022890611921565b8151835114610aea5760405162461bcd60e51b8152600401610228906118d9565b6000610af46106ea565b9050610b05816000878787876109a6565b60005b8451811015610bbc57838181518110610b3157634e487b7160e01b600052603260045260246000fd5b6020026020010151600080878481518110610b5c57634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254610ba4919061199d565b90915550819050610bb481611a1d565b915050610b08565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610c0d92919061156f565b60405180910390a46103e981600087878787610ed6565b6001600160a01b038416610c4a5760405162461bcd60e51b815260040161022890611731565b6000610c546106ea565b9050610c6581878761073088610d58565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610ca65760405162461bcd60e51b8152600401610228906117c8565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610ce390849061199d565b92505081905550856001600160a01b0316876001600160a01b0316836001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051610d3992919061196b565b60405180910390a4610d4f828888888888610db1565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610da057634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b610dc3846001600160a01b0316610fa7565b156109a65760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610dfc9089908990889088908890600401611517565b602060405180830381600087803b158015610e1657600080fd5b505af1925050508015610e46575060408051601f3d908101601f19168201909252610e43918101906113ec565b60015b610ea657610e52611a64565b806308c379a01415610e8c5750610e67611a7b565b80610e725750610e8e565b8060405162461bcd60e51b815260040161022891906115a8565b505b60405162461bcd60e51b8152600401610228906115bb565b6001600160e01b0319811663f23a6e6160e01b14610d4f5760405162461bcd60e51b81526004016102289061160f565b610ee8846001600160a01b0316610fa7565b156109a65760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610f2190899089908890889088906004016114b9565b602060405180830381600087803b158015610f3b57600080fd5b505af1925050508015610f6b575060408051601f3d908101601f19168201909252610f68918101906113ec565b60015b610f7757610e52611a64565b6001600160e01b0319811663bc197c8160e01b14610d4f5760405162461bcd60e51b81526004016102289061160f565b3b151590565b80356001600160a01b038116811461029a57600080fd5b600082601f830112610fd4578081fd5b81356020610fe182611979565b604051610fee82826119f0565b83815282810191508583018385028701840188101561100b578586fd5b855b858110156110295781358452928401929084019060010161100d565b5090979650505050505050565b600082601f830112611046578081fd5b813567ffffffffffffffff81111561106057611060611a4e565b604051611077601f8301601f1916602001826119f0565b81815284602083860101111561108b578283fd5b816020850160208301379081016020019190915292915050565b6000602082840312156110b6578081fd5b6110bf82610fad565b9392505050565b600080604083850312156110d8578081fd5b6110e183610fad565b91506110ef60208401610fad565b90509250929050565b600080600080600060a0868803121561110f578081fd5b61111886610fad565b945061112660208701610fad565b9350604086013567ffffffffffffffff80821115611142578283fd5b61114e89838a01610fc4565b94506060880135915080821115611163578283fd5b61116f89838a01610fc4565b93506080880135915080821115611184578283fd5b5061119188828901611036565b9150509295509295909350565b600080600080600060a086880312156111b5578081fd5b6111be86610fad565b94506111cc60208701610fad565b93506040860135925060608601359150608086013567ffffffffffffffff8111156111f5578182fd5b61119188828901611036565b600080600060608486031215611215578283fd5b61121e84610fad565b9250602084013567ffffffffffffffff8082111561123a578384fd5b61124687838801610fc4565b9350604086013591508082111561125b578283fd5b5061126886828701610fc4565b9150509250925092565b60008060408385031215611284578182fd5b61128d83610fad565b9150602083013580151581146112a1578182fd5b809150509250929050565b600080604083850312156112be578182fd5b6112c783610fad565b946020939093013593505050565b6000806000606084860312156112e9578283fd5b6112f284610fad565b95602085013595506040909401359392505050565b60008060408385031215611319578182fd5b823567ffffffffffffffff80821115611330578384fd5b818501915085601f830112611343578384fd5b8135602061135082611979565b60405161135d82826119f0565b8381528281019150858301838502870184018b101561137a578889fd5b8896505b848710156113a35761138f81610fad565b83526001969096019591830191830161137e565b50965050860135925050808211156113b9578283fd5b506113c685828601610fc4565b9150509250929050565b6000602082840312156113e1578081fd5b81356110bf81611b0d565b6000602082840312156113fd578081fd5b81516110bf81611b0d565b600060208284031215611419578081fd5b5035919050565b6000815180845260208085019450808401835b8381101561144f57815187529582019590820190600101611433565b509495945050505050565b60008151808452815b8181101561147f57602081850181015186830182015201611463565b818111156114905782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0386811682528516602082015260a0604082018190526000906114e590830186611420565b82810360608401526114f78186611420565b9050828103608084015261150b818561145a565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906115519083018461145a565b979650505050505050565b6000602082526110bf6020830184611420565b6000604082526115826040830185611420565b82810360208401526115948185611420565b95945050505050565b901515815260200190565b6000602082526110bf602083018461145a565b60208082526034908201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356040820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606082015260800190565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6020808252602b908201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60408201526a65726f206164647265737360a81b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526032908201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206040820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604082015268103337b91039b2b63360b91b606082015260800190565b60208082526029908201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604082015268040dad2e6dac2e8c6d60bb1b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b90815260200190565b918252602082015260400190565b600067ffffffffffffffff82111561199357611993611a4e565b5060209081020190565b600082198211156119b0576119b0611a38565b500190565b6002810460018216806119c957607f821691505b602082108114156119ea57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715611a1657611a16611a4e565b6040525050565b6000600019821415611a3157611a31611a38565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561056857600481823e5160e01c90565b600060443d1015611a8b57610568565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611abd575050505050610568565b8285019150815181811115611ad757505050505050610568565b843d8701016020828501011115611af357505050505050610568565b611b02602082860101876119f0565b509094505050505090565b6001600160e01b0319811681146106ce57600080fdfea26469706673582212201ff443cf703600b9373a293ce70a28b89bdb1114b8c3eb48f8e73b1c4a5bd59b64736f6c63430008010033";

export class ColeccionablesERC1155__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _uri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ColeccionablesERC1155> {
    return super.deploy(
      _uri,
      overrides || {}
    ) as Promise<ColeccionablesERC1155>;
  }
  getDeployTransaction(
    _uri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_uri, overrides || {});
  }
  attach(address: string): ColeccionablesERC1155 {
    return super.attach(address) as ColeccionablesERC1155;
  }
  connect(signer: Signer): ColeccionablesERC1155__factory {
    return super.connect(signer) as ColeccionablesERC1155__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ColeccionablesERC1155Interface {
    return new utils.Interface(_abi) as ColeccionablesERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ColeccionablesERC1155 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ColeccionablesERC1155;
  }
}
